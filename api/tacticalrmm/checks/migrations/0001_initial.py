# Generated by Django 3.0.6 on 2020-05-16 07:04

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agents', '0001_initial'),
        ('automation', '0001_initial'),
        ('autotasks', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CpuLoadCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(choices=[('diskspace', 'Disk Space Check'), ('ping', 'Ping Check'), ('cpuload', 'CPU Load Check'), ('memory', 'Memory Check'), ('winsvc', 'Win Service Check'), ('script', 'Script Check')], default='cpuload', max_length=30)),
                ('cpuload', models.PositiveIntegerField(default=85)),
                ('status', models.CharField(choices=[('passing', 'Passing'), ('failing', 'Failing'), ('pending', 'Pending')], default='pending', max_length=30)),
                ('email_alert', models.BooleanField(default=False)),
                ('text_alert', models.BooleanField(default=False)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('failures', models.PositiveIntegerField(default=5)),
                ('failure_count', models.PositiveIntegerField(default=0)),
                ('history', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True), default=list, null=True, size=None)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cpuloadchecks', to='agents.Agent')),
                ('policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cpuloadchecks', to='automation.Policy')),
                ('task_on_failure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cpuloadtaskfailure', to='autotasks.AutomatedTask')),
            ],
        ),
        migrations.CreateModel(
            name='DiskCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(choices=[('diskspace', 'Disk Space Check'), ('ping', 'Ping Check'), ('cpuload', 'CPU Load Check'), ('memory', 'Memory Check'), ('winsvc', 'Win Service Check'), ('script', 'Script Check')], default='diskspace', max_length=30)),
                ('disk', models.CharField(blank=True, max_length=2, null=True)),
                ('threshold', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('passing', 'Passing'), ('failing', 'Failing'), ('pending', 'Pending')], default='pending', max_length=30)),
                ('email_alert', models.BooleanField(default=False)),
                ('text_alert', models.BooleanField(default=False)),
                ('more_info', models.TextField(blank=True, null=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('failures', models.PositiveIntegerField(default=5)),
                ('failure_count', models.PositiveIntegerField(default=0)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diskchecks', to='agents.Agent')),
                ('policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diskchecks', to='automation.Policy')),
                ('task_on_failure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disktaskfailure', to='autotasks.AutomatedTask')),
            ],
        ),
        migrations.CreateModel(
            name='MemCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(choices=[('diskspace', 'Disk Space Check'), ('ping', 'Ping Check'), ('cpuload', 'CPU Load Check'), ('memory', 'Memory Check'), ('winsvc', 'Win Service Check'), ('script', 'Script Check')], default='memory', max_length=30)),
                ('threshold', models.PositiveIntegerField(default=75)),
                ('status', models.CharField(choices=[('passing', 'Passing'), ('failing', 'Failing'), ('pending', 'Pending')], default='pending', max_length=30)),
                ('email_alert', models.BooleanField(default=False)),
                ('text_alert', models.BooleanField(default=False)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('failures', models.PositiveIntegerField(default=5)),
                ('failure_count', models.PositiveIntegerField(default=0)),
                ('history', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True), default=list, null=True, size=None)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='memchecks', to='agents.Agent')),
                ('policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='memchecks', to='automation.Policy')),
                ('task_on_failure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='memtaskfailure', to='autotasks.AutomatedTask')),
            ],
        ),
        migrations.CreateModel(
            name='PingCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(choices=[('diskspace', 'Disk Space Check'), ('ping', 'Ping Check'), ('cpuload', 'CPU Load Check'), ('memory', 'Memory Check'), ('winsvc', 'Win Service Check'), ('script', 'Script Check')], default='ping', max_length=30)),
                ('ip', models.CharField(max_length=255)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('failures', models.PositiveIntegerField(default=5)),
                ('status', models.CharField(choices=[('passing', 'Passing'), ('failing', 'Failing'), ('pending', 'Pending')], default='pending', max_length=30)),
                ('failure_count', models.PositiveIntegerField(default=0)),
                ('email_alert', models.BooleanField(default=False)),
                ('text_alert', models.BooleanField(default=False)),
                ('more_info', models.TextField(blank=True, null=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pingchecks', to='agents.Agent')),
                ('policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pingchecks', to='automation.Policy')),
                ('task_on_failure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pingtaskfailure', to='autotasks.AutomatedTask')),
            ],
        ),
        migrations.CreateModel(
            name='Script',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('filename', models.CharField(max_length=255)),
                ('shell', models.CharField(choices=[('powershell', 'Powershell'), ('cmd', 'Batch (CMD)'), ('python', 'Python')], default='powershell', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ScriptCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(choices=[('diskspace', 'Disk Space Check'), ('ping', 'Ping Check'), ('cpuload', 'CPU Load Check'), ('memory', 'Memory Check'), ('winsvc', 'Win Service Check'), ('script', 'Script Check')], default='script', max_length=30)),
                ('timeout', models.PositiveIntegerField(default=120)),
                ('failures', models.PositiveIntegerField(default=5)),
                ('status', models.CharField(choices=[('passing', 'Passing'), ('failing', 'Failing'), ('pending', 'Pending')], default='pending', max_length=30)),
                ('failure_count', models.PositiveIntegerField(default=0)),
                ('email_alert', models.BooleanField(default=False)),
                ('text_alert', models.BooleanField(default=False)),
                ('stdout', models.TextField(blank=True, null=True)),
                ('stderr', models.TextField(blank=True, null=True)),
                ('retcode', models.IntegerField(default=0)),
                ('execution_time', models.CharField(default='0.0000', max_length=100)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scriptchecks', to='agents.Agent')),
                ('policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scriptchecks', to='automation.Policy')),
                ('script', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='script', to='checks.Script')),
                ('task_on_failure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scripttaskfailure', to='autotasks.AutomatedTask')),
            ],
        ),
        migrations.CreateModel(
            name='WinServiceCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(choices=[('diskspace', 'Disk Space Check'), ('ping', 'Ping Check'), ('cpuload', 'CPU Load Check'), ('memory', 'Memory Check'), ('winsvc', 'Win Service Check'), ('script', 'Script Check')], default='winsvc', max_length=30)),
                ('svc_name', models.CharField(max_length=255)),
                ('svc_display_name', models.CharField(max_length=255)),
                ('pass_if_start_pending', models.BooleanField(default=False)),
                ('restart_if_stopped', models.BooleanField(default=False)),
                ('failures', models.PositiveIntegerField(default=1)),
                ('failure_count', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('passing', 'Passing'), ('failing', 'Failing'), ('pending', 'Pending')], default='pending', max_length=30)),
                ('more_info', models.TextField(blank=True, null=True)),
                ('email_alert', models.BooleanField(default=False)),
                ('text_alert', models.BooleanField(default=False)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winservicechecks', to='agents.Agent')),
                ('policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winservicechecks', to='automation.Policy')),
                ('task_on_failure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='winsvctaskfailure', to='autotasks.AutomatedTask')),
            ],
        ),
        migrations.CreateModel(
            name='WinServiceCheckEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent', models.DateTimeField(auto_now=True)),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checks.WinServiceCheck')),
            ],
        ),
        migrations.CreateModel(
            name='ScriptCheckEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent', models.DateTimeField(auto_now=True)),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checks.ScriptCheck')),
            ],
        ),
        migrations.CreateModel(
            name='PingCheckEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent', models.DateTimeField(auto_now=True)),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checks.PingCheck')),
            ],
        ),
        migrations.CreateModel(
            name='MemCheckEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent', models.DateTimeField(auto_now=True)),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checks.MemCheck')),
            ],
        ),
        migrations.CreateModel(
            name='DiskCheckEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent', models.DateTimeField(auto_now=True)),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checks.DiskCheck')),
            ],
        ),
        migrations.CreateModel(
            name='CpuLoadCheckEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent', models.DateTimeField(auto_now=True)),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checks.CpuLoadCheck')),
            ],
        ),
    ]
